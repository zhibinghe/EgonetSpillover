% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ENRT.R
\name{df.ENRT}
\alias{df.ENRT}
\title{Convert to the standard ego-network data structure based on users' data}
\usage{
df.ENRT(nodeid, R, idx_net, Z, X = NA, y = NA)
}
\arguments{
\item{nodeid}{a vector of unique id for all network nodes}

\item{R}{a vector of logical values indicating if a node is an index participant, has values of either 0 or 1, must have the same length as \code{nodeid}}

\item{idx_net}{a vector showing which network each node belongs to, must have the same length as \code{nodeid}. Note that each network member can only be connected to one index participant}

\item{Z}{a vector of treatment status for all nodes, must have the length as \code{nodeid}}

\item{X}{a vector or a matrix of continuous or categorical covariates for each node}

\item{y}{a vector of outcome for each node, must have the same length as \code{nodeid}}
}
\value{
a standard dataframe of ego-network
}
\description{
Convert to the standard ego-network data structure based on users' data
}
\details{
The standard ego-network dataframe should be organized and grouped by the network, and include the following required columns information:
\itemize{
\item{netid:} network id, such as \eqn{k=1,\dots,K}
\item{nodeid:} nodes in each network
\item{R:} indicator of index participant, showing if a node is the index participant of a network, ENRT assumes each network has and only has one index participant
\item{Z:} treatment status, indicating if the node is treated. ENRT assumes that only the index participant can be treated
\item{G:} number of treated social network neighbors
\item{X:} covariates, if there are multiple categorical variables, they must be integrated to one categorical variable.
\item{y:} outcome variable
}
}
\examples{
# random generate ENRT data
n_node <- 100
K <- 20
nodeid <- 1:n_node
netid <- 1:K
idx_net <- sample(netid, n_node, replace=TRUE)
# might give error, data does not satisfy the ENRT design
R <- sample(c(0,1), n_node, replace=TRUE)
Z <- sample(c(0,1), n_node, replace=TRUE)
df.ENRT(nodeid, R, idx_net, Z)
# ENRT design
df <- data.frame(nodeid=nodeid, idx_net=idx_net) \%>\% arrange(idx_net, by_group=TRUE)
# add R
df <- df \%>\% group_by(idx_net) \%>\% mutate(R= ifelse(row_number()==1, 1, 0))
# add Z
df <- df \%>\% mutate(Z= ifelse(R==1, sample(c(0,1), 1, prob=c(0.6,0.4), replace=TRUE), 0))
df.ENRT(df$nodeid, df$R, df$idx_net, df$Z, X=sample(LETTERS[1:4], n_node, replace=TRUE, prob=c(1/4,1/4,1/4,1/4)))
}
\seealso{
\code{gen_egonet}
}
