% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_size_wald.R
\name{sam_size.Wald.cnt}
\alias{sam_size.Wald.cnt}
\title{Sample size calculation for Wald test with continuous covariates}
\usage{
sam_size.Wald.cnt(
  p,
  rho,
  n,
  m = 1,
  sigma2_y = 1,
  sigma2_x = NULL,
  Delta,
  alpha = 0.05,
  lambda = 0.2,
  Kmax = 1000,
  message = FALSE
)
}
\arguments{
\item{p}{Bernoulli probability for treatment of index participants}

\item{rho}{ICC correlation}

\item{n}{network size (exclude ego node), suppose all networks have the same number of members}

\item{m}{number of covariates}

\item{sigma2_y}{variance of outcome variable}

\item{sigma2_x}{variance matrix of covariates}

\item{Delta}{a vector of values in alternative hypothesis}

\item{alpha}{Type I error, 0.05 by default}

\item{lambda}{Type II error}

\item{Kmax}{maximum iteration times}

\item{message}{logical value indicates whether running procedure is reported}
}
\value{
minimal required sample size
}
\description{
Sample size calculation for Wald test with continuous covariates
}
\examples{
library(ggplot2)
m <- 3
R <- matrix(0.0, m, m); diag(R) <- 1
s <- rep(1, m)
Delta <- rep(0.2, m) # repeat case
# Delta <- c(0.2, rep(0, m-1)) #unrepeat case
sam_size.Wald.cnt(p = 0.3, rho=0.1, m=m, sigma2_x=cor2cov(R,s), n=2, Delta=Delta, message=TRUE) # simple demo
## simulation for various parameters combination
var_n <- c(2,3,5,10)
#var_p <- c(0.3,0.5,0.7,0.9)
var_p <- 0.5
var_rho <- seq(0.1, 0.9, 0.1)
outK <- list(length = length(var_n))
for(i in 1:length(var_n)) {
  svMisc::progress(i, length(var_n))
  temp <- data.frame(matrix(NA, nrow=length(var_rho), ncol=length(var_p) + 1))
  temp[,1] <- var_rho
  for(j in 1:length(var_p)) {
    temp[,j+1] <- sapply(var_rho, sam_size.Wald.cnt, p=var_p[j], n=var_n[i], m=m, sigma2_x=cor2cov(R,s), Delta=Delta) #
  }
  outK[[i]] <- temp
}
outK \%>\% dplyr::bind_rows(.id = "id") \%>\% tidyr::pivot_longer(-c(id,X1)) \%>\%
  ggplot(aes(x = X1, y = value, color = name, group = name)) +
  geom_smooth(method="loess", span=0.7, se=F) +
  facet_wrap(~id, labeller=labeller(id = c("1" = "n = 2",
                                           "2" = "n = 3",
                                           "3" = "n = 5",
                                           "4" = "n = 10"))) +
  labs(y = paste0("Required number of networks"), x = expression(rho[Y])) +
  scale_color_discrete(name="covariates", labels=c(3,4))

}
