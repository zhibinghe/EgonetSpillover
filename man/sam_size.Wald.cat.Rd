% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/sample_size_wald.R
\name{sam_size.Wald.cat}
\alias{sam_size.Wald.cat}
\title{Sample size calculation for Wald test with categrical covariates}
\usage{
sam_size.Wald.cat(
  p,
  rho,
  n,
  g,
  sigma2_y = 1,
  sigma2_x = NULL,
  Delta = 0.5,
  alpha = 0.05,
  lambda = 0.2,
  Kmax = 1000,
  message = FALSE,
  maineff = FALSE
)
}
\arguments{
\item{p}{Bernoulli probability for treatment of index participants}

\item{rho}{ICC correlation}

\item{n}{network size (exclude ego node), suppose all networks have the same number of members}

\item{g}{a vector of probabilities for each category, the sum is 1}

\item{sigma2_y}{variance of outcome variable}

\item{sigma2_x}{variance matrix of covariates}

\item{Delta}{a vector of values in alternative hypothesis}

\item{alpha}{Type I error, 0.05 by default}

\item{lambda}{Type II error}

\item{Kmax}{maximum iteration times}

\item{message}{logical value indicates whether running procedure is reported}

\item{m}{number of dummy variables, number of categories - 1}
}
\value{
minimal required sample size
}
\description{
Sample size calculation for Wald test with categrical covariates
}
\examples{
# example code
m <- 5 # 3,4,5
Delta <- rep(0.5, m)
# Delta <- c(0.5, rep(0, m-1))
g <- rep(1/(m+1), m+1)
sam_size.Wald.cat(p=0.3, rho=0.1, n=5, g=g, m=m, sigma2_x=cov.cat(g), Delta=Delta, message=TRUE)
var_n <- c(2,3,5,10)
var_p <- 0.5
var_rho <- seq(0.1, 0.9, 0.1)
outH <- list(length = length(var_n))
for(i in 1:length(var_n)) {
  svMisc::progress(i, length(var_n))
  temp <- data.frame(matrix(NA, nrow = length(var_rho), ncol=length(var_p) + 1))
  temp[,1] <- var_rho
  for(j in 1:length(var_p)) {
    temp[,j+1] = sapply(var_rho, sam_size.Wald.cat, g=g, p=var_p[j], n=var_n[i], sigma2_x=cov.cat(g), Delta=Delta)
  }
  outH[[i]] <- temp
}
outH \%>\% dplyr::bind_rows(.id = "id") \%>\% tidyr::pivot_longer(-c(id,X1)) \%>\%
  ggplot(aes(x = X1, y = value, color = name, group = name)) + # y = value * 8
  geom_smooth(method="loess", span=0.9, se=F) +
  labs(y = paste0("Required number of networks"), x = expression(rho[Y])) +
  scale_color_discrete(name="categories", labels=c("H=3","H=4","H=5","H=6")) +
  scale_linetype_manual(values = c("X2"=1,"X3"=1,"X4"=2,"X5"=2)) +
  #scale_linetype_manual(name = "categories", values = c(2,2,1,1))
  facet_wrap(~id, labeller = labeller(id = c("1" = "n = 2",
                                             "2" = "n = 3",
                                             "3" = "n = 5",
                                             "4" = "n = 10")))

}
